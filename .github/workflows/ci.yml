name: CI

on:
  push:
    branches: ['*']
  release:
    types: [created]

jobs:
  pytest:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Run pytest
      run: tox

  lint:
    runs-on: ubuntu-22.04.5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions
      - name: Lint
        run: tox -e flake8,lint


  testpypi-package:
    if: github.event_name == 'release' && github.event.release.prerelease == true
    needs: [pytest]
    runs-on: ubuntu-22.04.5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Get release version
        id: get_release
        run: |
          VERSION=$(echo '${{ github.event.release.tag_name }}')
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Install dependencies
        run: pip install twine wheel
      - name: Build package
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          rm -f dist/*
          python setup.py sdist bdist_wheel
      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: twine upload --repository testpypi dist/*

  pypi-package:
    if: github.event_name == 'release' && github.event.release.prerelease == false
    needs: [pytest]
    runs-on: ubuntu-22.04.5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Get release version
        id: get_release
        run: |
          VERSION=$(echo '${{ github.event.release.tag_name }}')
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Install dependencies
        run: pip install twine wheel
      - name: Build package
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          rm -f dist/*
          python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: twine upload dist/*
